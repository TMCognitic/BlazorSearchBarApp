@using System.Text.Json
@inject HttpClient httpClient

<div style="border:solid black 1px;">
    <h3>Search Bar Component</h3>
    <div class="input-group">
        <input class="form-control" @bind="_text" @bind:event="oninput" @bind:after="OnTextChanged" />
    </div>
    @if(_players.Count() > 0)
    {
        <div class="scrollingDiv">
            @foreach(Player player in _players)
            {
                <div @onclick="() => OnPlayerSelected(player)">
                    <p>@player.Id : @player.Prenom</p>
                </div>
            }
        </div>
    }
</div>

@code {
    private string? _text;

    private IEnumerable<Player> _players = Enumerable.Empty<Player>();

    [Parameter]
    public EventCallback<Player> OnClickCallback { get; set; }

    private async Task OnTextChanged()
    {
        string? text = _text?.Trim();

        if(text is null || text.Length < 2)
        {
            return;
        }  

        Player[]? players = await httpClient.GetFromJsonAsync<Player[]>("sample-data/data.json", new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });

        if(players is not null)
        {
            _players = players.Where(p => p.Prenom.ToUpper().Contains(text.ToUpper())).ToArray();
        }
    }

    private void OnPlayerSelected(Player player)
    {
        _text = "";
        _players = Enumerable.Empty<Player>();
        OnClickCallback.InvokeAsync(player);
    }
}
